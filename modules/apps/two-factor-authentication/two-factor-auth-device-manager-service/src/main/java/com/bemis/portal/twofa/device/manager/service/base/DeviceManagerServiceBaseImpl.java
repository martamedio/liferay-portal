/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bemis.portal.twofa.device.manager.service.base;

import com.bemis.portal.twofa.device.manager.service.DeviceManagerService;
import com.bemis.portal.twofa.device.manager.service.persistence.DeviceCodePersistence;
import com.bemis.portal.twofa.device.manager.service.persistence.DevicePersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.InfrastructureUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the device manager remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.bemis.portal.twofa.device.manager.service.impl.DeviceManagerServiceImpl}.
 * </p>
 *
 * @author Prathima Shreenath
 * @see com.bemis.portal.twofa.device.manager.service.impl.DeviceManagerServiceImpl
 * @see com.bemis.portal.twofa.device.manager.service.DeviceManagerServiceUtil
 * @generated
 */
public abstract class DeviceManagerServiceBaseImpl extends BaseServiceImpl
	implements DeviceManagerService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.bemis.portal.twofa.device.manager.service.DeviceManagerServiceUtil} to access the device manager remote service.
	 */

	/**
	 * Returns the device local service.
	 *
	 * @return the device local service
	 */
	public com.bemis.portal.twofa.device.manager.service.DeviceLocalService getDeviceLocalService() {
		return deviceLocalService;
	}

	/**
	 * Sets the device local service.
	 *
	 * @param deviceLocalService the device local service
	 */
	public void setDeviceLocalService(
		com.bemis.portal.twofa.device.manager.service.DeviceLocalService deviceLocalService) {
		this.deviceLocalService = deviceLocalService;
	}

	/**
	 * Returns the device persistence.
	 *
	 * @return the device persistence
	 */
	public DevicePersistence getDevicePersistence() {
		return devicePersistence;
	}

	/**
	 * Sets the device persistence.
	 *
	 * @param devicePersistence the device persistence
	 */
	public void setDevicePersistence(DevicePersistence devicePersistence) {
		this.devicePersistence = devicePersistence;
	}

	/**
	 * Returns the device code local service.
	 *
	 * @return the device code local service
	 */
	public com.bemis.portal.twofa.device.manager.service.DeviceCodeLocalService getDeviceCodeLocalService() {
		return deviceCodeLocalService;
	}

	/**
	 * Sets the device code local service.
	 *
	 * @param deviceCodeLocalService the device code local service
	 */
	public void setDeviceCodeLocalService(
		com.bemis.portal.twofa.device.manager.service.DeviceCodeLocalService deviceCodeLocalService) {
		this.deviceCodeLocalService = deviceCodeLocalService;
	}

	/**
	 * Returns the device code persistence.
	 *
	 * @return the device code persistence
	 */
	public DeviceCodePersistence getDeviceCodePersistence() {
		return deviceCodePersistence;
	}

	/**
	 * Sets the device code persistence.
	 *
	 * @param deviceCodePersistence the device code persistence
	 */
	public void setDeviceCodePersistence(
		DeviceCodePersistence deviceCodePersistence) {
		this.deviceCodePersistence = deviceCodePersistence;
	}

	/**
	 * Returns the device manager local service.
	 *
	 * @return the device manager local service
	 */
	public com.bemis.portal.twofa.device.manager.service.DeviceManagerLocalService getDeviceManagerLocalService() {
		return deviceManagerLocalService;
	}

	/**
	 * Sets the device manager local service.
	 *
	 * @param deviceManagerLocalService the device manager local service
	 */
	public void setDeviceManagerLocalService(
		com.bemis.portal.twofa.device.manager.service.DeviceManagerLocalService deviceManagerLocalService) {
		this.deviceManagerLocalService = deviceManagerLocalService;
	}

	/**
	 * Returns the device manager remote service.
	 *
	 * @return the device manager remote service
	 */
	public DeviceManagerService getDeviceManagerService() {
		return deviceManagerService;
	}

	/**
	 * Sets the device manager remote service.
	 *
	 * @param deviceManagerService the device manager remote service
	 */
	public void setDeviceManagerService(
		DeviceManagerService deviceManagerService) {
		this.deviceManagerService = deviceManagerService;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return DeviceManagerService.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = InfrastructureUtil.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.bemis.portal.twofa.device.manager.service.DeviceLocalService.class)
	protected com.bemis.portal.twofa.device.manager.service.DeviceLocalService deviceLocalService;
	@BeanReference(type = DevicePersistence.class)
	protected DevicePersistence devicePersistence;
	@BeanReference(type = com.bemis.portal.twofa.device.manager.service.DeviceCodeLocalService.class)
	protected com.bemis.portal.twofa.device.manager.service.DeviceCodeLocalService deviceCodeLocalService;
	@BeanReference(type = DeviceCodePersistence.class)
	protected DeviceCodePersistence deviceCodePersistence;
	@BeanReference(type = com.bemis.portal.twofa.device.manager.service.DeviceManagerLocalService.class)
	protected com.bemis.portal.twofa.device.manager.service.DeviceManagerLocalService deviceManagerLocalService;
	@BeanReference(type = DeviceManagerService.class)
	protected DeviceManagerService deviceManagerService;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}