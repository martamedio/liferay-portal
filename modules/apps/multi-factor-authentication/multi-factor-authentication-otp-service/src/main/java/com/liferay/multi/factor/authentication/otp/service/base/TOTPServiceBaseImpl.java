/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.multi.factor.authentication.otp.service.base;

import com.liferay.multi.factor.authentication.otp.model.TOTP;
import com.liferay.multi.factor.authentication.otp.service.TOTPService;
import com.liferay.multi.factor.authentication.otp.service.persistence.TOTPPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the totp remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.multi.factor.authentication.otp.service.impl.TOTPServiceImpl}.
 * </p>
 *
 * @author arthurchan35
 * @see com.liferay.multi.factor.authentication.otp.service.impl.TOTPServiceImpl
 * @see com.liferay.multi.factor.authentication.otp.service.TOTPServiceUtil
 * @generated
 */
public abstract class TOTPServiceBaseImpl extends BaseServiceImpl
	implements TOTPService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.multi.factor.authentication.otp.service.TOTPServiceUtil} to access the totp remote service.
	 */

	/**
	 * Returns the totp local service.
	 *
	 * @return the totp local service
	 */
	public com.liferay.multi.factor.authentication.otp.service.TOTPLocalService getTOTPLocalService() {
		return totpLocalService;
	}

	/**
	 * Sets the totp local service.
	 *
	 * @param totpLocalService the totp local service
	 */
	public void setTOTPLocalService(
		com.liferay.multi.factor.authentication.otp.service.TOTPLocalService totpLocalService) {
		this.totpLocalService = totpLocalService;
	}

	/**
	 * Returns the totp remote service.
	 *
	 * @return the totp remote service
	 */
	public TOTPService getTOTPService() {
		return totpService;
	}

	/**
	 * Sets the totp remote service.
	 *
	 * @param totpService the totp remote service
	 */
	public void setTOTPService(TOTPService totpService) {
		this.totpService = totpService;
	}

	/**
	 * Returns the totp persistence.
	 *
	 * @return the totp persistence
	 */
	public TOTPPersistence getTOTPPersistence() {
		return totpPersistence;
	}

	/**
	 * Sets the totp persistence.
	 *
	 * @param totpPersistence the totp persistence
	 */
	public void setTOTPPersistence(TOTPPersistence totpPersistence) {
		this.totpPersistence = totpPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return TOTPService.class.getName();
	}

	protected Class<?> getModelClass() {
		return TOTP.class;
	}

	protected String getModelClassName() {
		return TOTP.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = totpPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.liferay.multi.factor.authentication.otp.service.TOTPLocalService.class)
	protected com.liferay.multi.factor.authentication.otp.service.TOTPLocalService totpLocalService;
	@BeanReference(type = TOTPService.class)
	protected TOTPService totpService;
	@BeanReference(type = TOTPPersistence.class)
	protected TOTPPersistence totpPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
}